common:
  org_id: &org_id "r-XXXXX"
  terraform_role_arn: "arn:aws:iam::851725384896:role/terraform"
  default_region: &DefReg "us-east-2"
  statebucketsuffix: tf-state-01
  owner: "cloudon"
  common_tags:
    owner: "cloudon"
    terraform: "true"

Environments:
  shared:  
    Resources:
      org_units:
        inputs:
        - name: "development"
          parent_id: *org_id
        - name: "management"
          parent_id: *org_id
        - name: "production"
          parent_id: *org_id
        - name: "security"
          parent_id: *org_id
      accounts:
        inputs:
          us-dev:
            account_name: "cloudon_dev"
            account_email: "aws_env_dev@cloudon.work"
            ou: "ou-XXXX-XXXXXXXX"
          us-stg:
            account_name: "cloudon_stg"
            account_email: "aws_env_stg@cloudon.work"
            ou: "ou-XXXX-XXXXXXXX"
          us-prod:  
            account_name: "cloudon_eu_prod"
            account_email: "aws_env_eu_prod@cloudon.work"
            ou: "ou-XXXX-XXXXXXXX"
          eu-stg:
            account_name: "cloudon_eu_stg"
            account_email: "aws_env_eu_stg@cloudon.work"  
            ou: "ou-XXXX-XXXXXXXX"
          eu-prod:  
            account_name: "cloudon_eu_prod"
            account_email: "aws_env_eu_prod@cloudon.work"
            ou: "ou-XXXX-XXXXXXXX"
          management:
            account_name: "cloudon_master"
            account_email: "aws_masters@cloudon.work" 
            ou: "ou-XXXX-XXXXXXXX"
          security:
            account_name: "security"
            account_email: "aws_security@cloudon.work" 
            ou: "ou-XXXX-XXXXXXXX"
          log-archive:
            account_name: "log-archive"
            account_email: "aws_log_archive@cloudon.work"   
            ou: "ou-XXXX-XXXXXXXX"
          global:
            account_name: "cloudon_global"
            account_email: "aws_env_global@cloudon.work"  
            ou: "ou-XXXX-XXXXXXXX"
          network:
            account_name: "network"
            account_email: "aws_network@cloudon.work"
            ou: "ou-XXXX-XXXXXXXX"    
      iam:
        inputs:
          policies:  
          roles:    
          users:
            inputs:
            - name: "user1"
              policy_arns:
              - "arn:aws:iam::XXXXXXXX:policy/user_policy"
          groups:
            inputs:
            - name: "admins"
              users:
              - "admin1"
              - "admin2"
              group: "Admins"
            - name: "devops"
              users:
              - "user1"
              - "user2"
              - "user3"
              group: "devops"
            - name: "data-engineers"
              users:
              - "user1"
              - "user2"
              - "user3"
              group: "data-engineers"
            - name: "developers"
              users:
              - "user1"
              - "user2"
              - "user3"
              group: "developers"
            - name: "qa"
              users:
              - "user1"
              group: "qa"
          
  network:
    Resources:
      vpc:
        region: *DefReg
        inputs:
          - vpc_name: "outbound-vpc"
            vpc_cidr: "192.168.200.0/24"
            private_subnets: ["192.168.200.192/26", "192.168.200.128/26"]
            public_subnets: ["192.168.200.64/26", "192.168.200.0/26"]
            azs: ["us-east-2a", "us-east-2b"]
            enable_nat_gateway: true
            tags:
              Owner: "Terraform"
              Name: "outbound-vpc"
          - vpc_name: "core-vpc"
            vpc_cidr: "192.168.201.0/24"
            private_subnets: ["192.168.201.192/26", "192.168.201.128/26"]
            public_subnets: ["192.168.201.64/26", "192.168.201.0/26"]
            azs: ["us-east-2a", "us-east-2b"]
            enable_nat_gateway: false
            tags:
              Owner: "Terraform"
              Name: "core-vpc"
      core-tgw:
        region: *DefReg
        inputs:  
          name: "core-tgw"
          vpc_attachments: 
            - vpc_id: "vpc-XXXXXXXXXX"
              subnet_ids: 
              - "subnet-XXXXXXXXXXXXXXXXX"
              - "subnet-XXXXXXXXXXXXXXXXX"
              - "subnet-XXXXXXXXXXXXXXXXX"
              tgw_routes: 
              - destination_cidr_block: ""
        tags:
          Owner: "Terraform"
          Name: "core-tgw"          

  us-dev:
    Resources:
      vpc:
        region: *DefReg
        inputs:
          vpc_name: "us-dev-vpc"
          vpc_cidr: "10.30.0.0/16"
          azs: ["us-east-2a", "us-east-2b", "us-east-2c"]
          private_subnets: ["10.30.2.0/24", "10.30.3.0/24", "10.30.1.0/24"]
          public_subnets: ["10.30.101.0/24", "10.30.102.0/24","10.30.103.0/24"]
          intra_subnets: ["10.30.8.16/28", "10.30.8.32/28","10.30.8.0/28"]
          elasticache_subnets: ["10.30.10.0/24", "10.30.12.0/24","10.30.11.0/24"]
          database_subnets: ["10.30.5.0/24", "10.30.7.0/24","10.30.6.0/24"]
          database_subnet_names: ["us-dev-vpc-db-us-east-2a", "us-dev-vpc-db-us-east-2c", "us-dev-vpc-db-us-east-2b"]
          private_subnet_names: ["us-dev-private", "us-dev-private", "us-dev-private"]
          public_subnet_names: ["us-dev-public", "us-dev-public"]
          intra_subnet_names: ["us-dev-vpc-intra-us-east-2b", "us-dev-vpc-elasticache-us-east-2a","us-dev-vpc-elasticache-us-east-2c"]
          elasticache_subnet_names : ["us-dev-vpc-elasticache-us-east-2a", "us-dev-vpc-elasticache-us-east-2b","us-dev-vpc-elasticache-us-east-2c"]
          enable_nat_gateway: true
          tags:
            terraform: "true"
            vpc: "us-dev-vpc"
      rds:
        region: *DefReg
        inputs:
          rds_instances:
          - identifier: "us-dev-postgresql-rds" 
            availability_zone: "us-east-2c"      
            engine: "postgresql"
            engine_version: "14.10"
            instance_class: "db.t4g.small"
            allocated_storage: 50
            max_allocated_storage: 100
            storage_encrypted: true
            auto_minor_version_upgrade: true
            multi_az: false
            tags:
              Environment: "us-dev"
              Name: "us-dev-rds"
              Owner: "Terraform"
      aurora:
        region: *DefReg
        inputs:
          aurora_clusters:        
          - identifier: "us-dev-risk-rds"
            availability_zone: "us-east-2"
            engine: "aurora-postgresql"
            engine_version: "14.9"
            instance_class: "db.r6g.xlarge"
            storage_encrypted: false
            auto_minor_version_upgrade: true
            multi_az: false
            db_instance_role_associations:
            - s3export:
              source_engine_version: "14.10"  
              bucket_name: "us-dev-risk-engine-features"
              ingestion_role: "arn:aws:iam::XXXXXXXXXXXXXX:role/us-dev-risk-rds-export"
            - s3import: 
              source_engine_version: "14.10" 
              bucket_name: "us-dev-risk-engine-features"
              ingestion_role: "arn:aws:iam::XXXXXXXXXXXXX:role/us-dev-risk-rds-import"
            tags:
              Name: "us-dev-risk-rds"
              Owner: "Data"
      dynamodb:
        inputs:
          - name: "us-dev-freshsales-contacts"
            billing_mode: "PROVISIONED" 
            read_capacity: "1"
            write_capacity: "1"
            autoscaling_enabled: true
            autoscaling_read:
              min_capacity: "1"
              max_capacity: "10"
            autoscaling_write:
              min_capacity: "1"
              max_capacity: "10"
          - name: "us-dev-features"
            billing_mode: "PAY_PER_REQUEST"   
      sns:
        region: *DefReg
        inputs:
          topics:
            - name: "us-dev-data"
            - name: "us-dev-business"
          subscriptions:
            - id: "XXXXXXXXXXXXXXXXXXXXXXXX"
              protocol: "lambda"
              topic: "us-dev-data"
            - id: "XXXXXXXXXXXXXXXXXXXXXXXX"
              protocol: "sqs"
              topic: "us-dev-topic" 
      s3: 
        region: *DefReg
        inputs:
          - bucket_name: "us-dev-configs"
            tags:
              Environment: "us-dev"
              Owner: "Data"
              Description: "Backend S3 bucket"
              Name: "configs"
          - bucket_name: "us-dev-data"
            tags:
              Environment: "us-dev"
              Owner: "Data"
              Description: "Backend S3 bucket"
              Name: "data"
      ec2:
        region: *DefReg
        inputs:
        - name: "Open VPN Server"
          ami: "ami-029cfca952b331b52"
          availability_zone: "us-east-2a"
          private_ip: "10.30.101.133"
          associate_public_ip_address: "111.222.333.444"
          instance_type: "t3.small"
          ebs_block_device:
          - "vol-XXXXXXXXXXXXX"
          tags:
            Name: "Open VPN Server"
            Environment: "us-dev"
            Terraform: "true"
        - name: "us-dev-deeplink"
          ami: "ami-05e786af422f8082a"
          availability_zone: "us-east-2a"
          associate_public_ip_address: "111.222.333.444"
          instance_type: "t3.small"
          private_ip: "10.30.101.234"
          ebs_block_device:
          - "vol-XXXXXXXXXXXXX"
          tags:
            Name: "us-dev-deeplink"
            Environment: "us-dev"
            Terraform: "true"
      eks:
        region: *DefReg
        inputs:
          eks_version: "1.31"
          iam_role_arn: "arn:aws:iam::XXXXXXXXXXXXXX:role/us-dev-eks-cluster"
          node_security_group_name: "sg-XXXXXXXXXXXXXX"
          cluster_additional_security_group_ids: ["sg-XXXXXXXXXXXXXX"]
          cluster_endpoint_public_access: true
          eks_managed_node_groups: 
          - name: "separate-eks-mng-spot"
            instance_types: ["m6i.large", "m6id.large", "m6in.large", "m6idn.large", "m6a.large"]
            min_size: 0
            max_size: 10
            desired_size: 2
            ami_type: "AL2_x86_64"
            capacity_type: "SPOT"
            access_entries:
            - principal: "arn:aws:iam::XXXXXXXXXXXXXX:role/admins"
              type: STANDARD
              access_policies:
                - AmazonEKSAdminPolicy
                - AmazonEKSClusterAdminPolicy
              kubernetes_groups:
                - system:masters
            tags:
              Environment: "us-dev"
              Owner: "Terraform"
              karpenter.sh/discovery: "us-dev-eks"
              Name: "us-dev-eks"
      acm:
        region: *DefReg
        inputs:
        domain_name: "*.cloudon.one"
        tags:
          Environment: "us-dev"
          Department: "Infra"
          ManagedBy: "Terraform"
          Name: "cloudon.one"
      vpn:  
        region: *DefReg
        inputs:
          customer_gateway_id: "cgw-XXXXXXXXXXXXXX"
          connect_to_transit_gateway: true
          local_ipv4_network_cidr: "10.236.8.229/32"
          remote_ipv4_network_cidr: "10.30.0.0/16"
          tunnel1_inside_cidr: "169.254.252.180/30"
          tunnel2_inside_cidr: "169.254.201.232/30"
          transit_gateway_id: "tgw-XXXXXXXXXXXXXX"
          tunnel1_preshared_key: "" ## add your own key
          tunnel2_preshared_key: "" ## add your own key
          tags:
            Environment: "us-dev"
            Owner: "Terraform"
            Name: "us-dev-access-cgw"
      api-gw:
        region: *DefReg
        sqs_role_arn: &sqs_role "arn:aws:iam::XXXXXXXXXXXX:role/api-sqs-applications"
        acm_certificate_arn: &acm_cert "arn:aws:acm:us-east-2:1XXXXXXXXXXXX:certificate/XXXXXXXXXXXX"
        inputs:
        - name: "us-dev-data-gw"
          description: ""
          stage: "dev"
          domain_name: "us-dev-data.cloudon.one"
          sqs_role_arn: *sqs_role 
          endpoint_configuration:
            type: ["REGIONAL"]
            acm_certificate_arn: *acm_cert
          tags:
          resources:
            - name: "data"
              parent_id: "mlo2eu"
          methods:
            - name: "n/a__v2_data_behaviour_"
              resource: "/v2/data/behaviour"
              http_method: ""
              authorization: ""
              sqs_name: ""
              request_template: ""  
      redis:
        region: *DefReg
        inputs:
          engine_version: "6.x"
          node_type: "cache.t4g.medium"
      tgw:
        region: &DefReg
        inputs:
          tgw_routes: 
              - destination_cidr_block: "10.236.8.229/32"

  us-stg: 
    Resources:

  eu-prod:
    Resources:

  us-prod:
    Resources:

  ug-prod:
    Resources:

  management:
    Resources:

  security:
    resources:

  log-archive:
    resources:
      cloudtrail:
        inputs: 
          s3_bucket_name: "cloudon-org-s3-cloudtrails-logs-bucket"











  
  
  
  
    
      


  


      
      

           

    
      
      


  



    


  








 








    
